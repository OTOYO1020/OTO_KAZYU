{
    "id": "openstack%2Fglance~master~I84f92fcb957e06b46934de2a28b8989f179a965a",
    "project": "openstack/glance",
    "branch": "master",
    "topic": "master-contentlength-vs-chunkedtransfer",
    "hashtags": [],
    "change_id": "I84f92fcb957e06b46934de2a28b8989f179a965a",
    "subject": "Don't set Content-Length when using web.Response.app_iter.",
    "status": "ABANDONED",
    "created": "2012-12-12 10:14:57.000000000",
    "updated": "2013-01-17 06:03:03.000000000",
    "insertions": 0,
    "deletions": 1,
    "total_comment_count": 0,
    "unresolved_comment_count": 0,
    "has_review_started": true,
    "meta_rev_id": "300d1fb96d659031138e13cf29a536d76692477b",
    "_number": 17923,
    "owner": {
        "_account_id": 4375,
        "name": "Sascha Peilicke",
        "email": "sascha@peilicke.de",
        "username": "saschpe"
    },
    "labels": {
        "Verified": {
            "recommended": {
                "_account_id": 2166,
                "name": "SmokeStack CI",
                "username": "smokestack",
                "tags": [
                    "SERVICE_USER"
                ]
            },
            "all": [
                {
                    "_account_id": 1132,
                    "name": "Brian Waldon",
                    "email": "brian@waldon.cc",
                    "username": "bcwaldon"
                },
                {
                    "_account_id": 616,
                    "name": "Mark Washenberger",
                    "email": "mark.washenberger@markwash.net",
                    "username": "markwash"
                },
                {
                    "value": 1,
                    "date": "2013-01-09 20:35:39.000000000",
                    "_account_id": 2166,
                    "name": "SmokeStack CI",
                    "username": "smokestack",
                    "tags": [
                        "SERVICE_USER"
                    ]
                },
                {
                    "_account_id": 4375,
                    "name": "Sascha Peilicke",
                    "email": "sascha@peilicke.de",
                    "username": "saschpe"
                },
                {
                    "value": 1,
                    "date": "2012-12-12 10:51:44.000000000",
                    "_account_id": 3,
                    "name": "Jenkins",
                    "username": "jenkins"
                }
            ],
            "values": {
                "-2": "Fails",
                "-1": "Doesn't seem to work",
                " 0": "No score",
                "+1": "Works for me",
                "+2": "Verified"
            },
            "description": "",
            "value": 1,
            "default_value": 0,
            "optional": true
        },
        "Code-Review": {
            "disliked": {
                "_account_id": 1132,
                "name": "Brian Waldon",
                "email": "brian@waldon.cc",
                "username": "bcwaldon"
            },
            "all": [
                {
                    "value": -1,
                    "date": "2012-12-12 17:33:18.000000000",
                    "permitted_voting_range": {
                        "min": -1,
                        "max": 1
                    },
                    "_account_id": 1132,
                    "name": "Brian Waldon",
                    "email": "brian@waldon.cc",
                    "username": "bcwaldon"
                },
                {
                    "value": 0,
                    "date": "2012-12-14 18:16:26.000000000",
                    "permitted_voting_range": {
                        "min": -1,
                        "max": 1
                    },
                    "_account_id": 616,
                    "name": "Mark Washenberger",
                    "email": "mark.washenberger@markwash.net",
                    "username": "markwash"
                },
                {
                    "value": 0,
                    "permitted_voting_range": {
                        "min": -1,
                        "max": 1
                    },
                    "_account_id": 2166,
                    "name": "SmokeStack CI",
                    "username": "smokestack",
                    "tags": [
                        "SERVICE_USER"
                    ]
                },
                {
                    "value": 0,
                    "date": "2012-12-13 10:08:31.000000000",
                    "permitted_voting_range": {
                        "min": -1,
                        "max": 1
                    },
                    "_account_id": 4375,
                    "name": "Sascha Peilicke",
                    "email": "sascha@peilicke.de",
                    "username": "saschpe"
                },
                {
                    "value": 0,
                    "permitted_voting_range": {
                        "min": -1,
                        "max": 1
                    },
                    "_account_id": 3,
                    "name": "Jenkins",
                    "username": "jenkins"
                }
            ],
            "values": {
                "-2": "Do not merge",
                "-1": "This patch needs further work before it can be merged",
                " 0": "No score",
                "+1": "Looks good to me, but someone else must approve",
                "+2": "Looks good to me (core reviewer)"
            },
            "description": "",
            "value": -1,
            "default_value": 0,
            "optional": true
        },
        "Workflow": {
            "all": [
                {
                    "date": "2012-12-12 17:22:03.000000000",
                    "_account_id": 1132,
                    "name": "Brian Waldon",
                    "email": "brian@waldon.cc",
                    "username": "bcwaldon"
                },
                {
                    "date": "2012-12-14 18:16:26.000000000",
                    "_account_id": 616,
                    "name": "Mark Washenberger",
                    "email": "mark.washenberger@markwash.net",
                    "username": "markwash"
                },
                {
                    "_account_id": 2166,
                    "name": "SmokeStack CI",
                    "username": "smokestack",
                    "tags": [
                        "SERVICE_USER"
                    ]
                },
                {
                    "value": 0,
                    "permitted_voting_range": {
                        "min": -1,
                        "max": 0
                    },
                    "_account_id": 4375,
                    "name": "Sascha Peilicke",
                    "email": "sascha@peilicke.de",
                    "username": "saschpe"
                },
                {
                    "_account_id": 3,
                    "name": "Jenkins",
                    "username": "jenkins"
                }
            ],
            "values": {
                "-1": "Work in progress",
                " 0": "Ready for reviews",
                "+1": "Approved"
            },
            "description": "",
            "default_value": 0,
            "optional": true
        },
        "Review-Priority": {
            "all": [
                {
                    "_account_id": 1132,
                    "name": "Brian Waldon",
                    "email": "brian@waldon.cc",
                    "username": "bcwaldon"
                },
                {
                    "_account_id": 616,
                    "name": "Mark Washenberger",
                    "email": "mark.washenberger@markwash.net",
                    "username": "markwash"
                },
                {
                    "_account_id": 2166,
                    "name": "SmokeStack CI",
                    "username": "smokestack",
                    "tags": [
                        "SERVICE_USER"
                    ]
                },
                {
                    "_account_id": 4375,
                    "name": "Sascha Peilicke",
                    "email": "sascha@peilicke.de",
                    "username": "saschpe"
                },
                {
                    "_account_id": 3,
                    "name": "Jenkins",
                    "username": "jenkins"
                }
            ],
            "values": {
                "-1": "Branch Freeze",
                " 0": "No Priority",
                "+1": "Important Change",
                "+2": "Top Priority / Holds Gate"
            },
            "description": "",
            "default_value": 0,
            "optional": true
        }
    },
    "removable_reviewers": [],
    "reviewers": {
        "REVIEWER": [
            {
                "_account_id": 3,
                "name": "Jenkins",
                "username": "jenkins"
            },
            {
                "_account_id": 616,
                "name": "Mark Washenberger",
                "email": "mark.washenberger@markwash.net",
                "username": "markwash"
            },
            {
                "_account_id": 1132,
                "name": "Brian Waldon",
                "email": "brian@waldon.cc",
                "username": "bcwaldon"
            },
            {
                "_account_id": 2166,
                "name": "SmokeStack CI",
                "username": "smokestack",
                "tags": [
                    "SERVICE_USER"
                ]
            },
            {
                "_account_id": 4375,
                "name": "Sascha Peilicke",
                "email": "sascha@peilicke.de",
                "username": "saschpe"
            }
        ]
    },
    "pending_reviewers": {},
    "reviewer_updates": [
        {
            "updated": "2012-12-12 10:51:44.000000000",
            "updated_by": {
                "_account_id": 3,
                "name": "Jenkins",
                "username": "jenkins"
            },
            "reviewer": {
                "_account_id": 3,
                "name": "Jenkins",
                "username": "jenkins"
            },
            "state": "REVIEWER"
        },
        {
            "updated": "2012-12-12 17:22:03.000000000",
            "updated_by": {
                "_account_id": 1132,
                "name": "Brian Waldon",
                "email": "brian@waldon.cc",
                "username": "bcwaldon"
            },
            "reviewer": {
                "_account_id": 1132,
                "name": "Brian Waldon",
                "email": "brian@waldon.cc",
                "username": "bcwaldon"
            },
            "state": "REVIEWER"
        },
        {
            "updated": "2012-12-14 18:16:26.000000000",
            "updated_by": {
                "_account_id": 616,
                "name": "Mark Washenberger",
                "email": "mark.washenberger@markwash.net",
                "username": "markwash"
            },
            "reviewer": {
                "_account_id": 616,
                "name": "Mark Washenberger",
                "email": "mark.washenberger@markwash.net",
                "username": "markwash"
            },
            "state": "REVIEWER"
        },
        {
            "updated": "2013-01-09 20:35:39.000000000",
            "updated_by": {
                "_account_id": 2166,
                "name": "SmokeStack CI",
                "username": "smokestack",
                "tags": [
                    "SERVICE_USER"
                ]
            },
            "reviewer": {
                "_account_id": 2166,
                "name": "SmokeStack CI",
                "username": "smokestack",
                "tags": [
                    "SERVICE_USER"
                ]
            },
            "state": "REVIEWER"
        }
    ],
    "messages": [
        {
            "id": "2428c2ef0557150e55250143da370290a69bf143",
            "author": {
                "_account_id": 3,
                "name": "Jenkins",
                "username": "jenkins"
            },
            "real_author": {
                "_account_id": 3,
                "name": "Jenkins",
                "username": "jenkins"
            },
            "date": "2012-12-12 10:51:44.000000000",
            "message": "Patch Set 1: Works for me\n\nBuild successful\n\n- http://logs.openstack.org/17923/1/check/gate-glance-merge/3029 : SUCCESS\n- http://logs.openstack.org/17923/1/check/gate-glance-docs/1200 : SUCCESS\n- http://logs.openstack.org/17923/1/check/gate-glance-pep8/3134 : SUCCESS\n- http://logs.openstack.org/17923/1/check/gate-glance-python26/2638 : SUCCESS\n- http://logs.openstack.org/17923/1/check/gate-glance-python27/2652 : SUCCESS\n- http://logs.openstack.org/17923/1/check/gate-tempest-devstack-vm/21925 : SUCCESS\n",
            "accounts_in_message": [],
            "_revision_number": 1
        },
        {
            "id": "7e85342e3f7c1130d1a631a6988203079bb42e9e",
            "author": {
                "_account_id": 1132,
                "name": "Brian Waldon",
                "email": "brian@waldon.cc",
                "username": "bcwaldon"
            },
            "real_author": {
                "_account_id": 1132,
                "name": "Brian Waldon",
                "email": "brian@waldon.cc",
                "username": "bcwaldon"
            },
            "date": "2012-12-12 17:22:03.000000000",
            "message": "Patch Set 1:\n\nThanks - I'll expand the assertions in the related tests to check for the other headers we do expect. Can you replace the body of your commit message with a link to a bug report (that you probably need to create)?",
            "accounts_in_message": [],
            "_revision_number": 1
        },
        {
            "id": "8e08a015ce296658dd2e703c5a35a391781fd7ee",
            "author": {
                "_account_id": 1132,
                "name": "Brian Waldon",
                "email": "brian@waldon.cc",
                "username": "bcwaldon"
            },
            "real_author": {
                "_account_id": 1132,
                "name": "Brian Waldon",
                "email": "brian@waldon.cc",
                "username": "bcwaldon"
            },
            "date": "2012-12-12 17:33:18.000000000",
            "message": "Patch Set 1: I would prefer that you didn't merge this\n\nThere's an assertion in glance/tests/unit/v2/test_image_data_resource.py:TestImageDataSerializer.test_download that checks that Content-Length is '3'. Can you explain how that header is still being set, and if this is expected behavior or not?",
            "accounts_in_message": [],
            "_revision_number": 1
        },
        {
            "id": "c0b11b0e76cf2a6b38309e2907b22ef476646703",
            "author": {
                "_account_id": 4375,
                "name": "Sascha Peilicke",
                "email": "sascha@peilicke.de",
                "username": "saschpe"
            },
            "real_author": {
                "_account_id": 4375,
                "name": "Sascha Peilicke",
                "email": "sascha@peilicke.de",
                "username": "saschpe"
            },
            "date": "2012-12-13 10:08:31.000000000",
            "message": "Patch Set 1:\n\nThere is indeed an assertion on Content-Length, which is not part of the headers set after the following line:\n\n  self.serializer.download(response, fixture)\n  \nBut the following call modifies the header set again\n\n  self.assertEqual('ZZZ', response.body)\n\nAnd adds a Content-Length, which makes the next assertion pass:\n\n  self.assertEqual('3', response.headers['Content-Length'])\n\nYou can check that by changing their order. The respective code is:\n\nhttps://github.com/Pylons/webob/blob/master/webob/response.py#L355\n\nAs you can read in the docstring of Response._body_get it is eating up the entire app_iter. This somewhat simulates a non-chunked encoding transfer and that's why (I assume) it's setting Content-Length (which would be ok then). It's also documented here: http://docs.webob.org/en/latest/reference.html#body-app-iter",
            "accounts_in_message": [],
            "_revision_number": 1
        },
        {
            "id": "7c7815ee6ca4262eaa58b9742d20816bc1d44daf",
            "author": {
                "_account_id": 616,
                "name": "Mark Washenberger",
                "email": "mark.washenberger@markwash.net",
                "username": "markwash"
            },
            "real_author": {
                "_account_id": 616,
                "name": "Mark Washenberger",
                "email": "mark.washenberger@markwash.net",
                "username": "markwash"
            },
            "date": "2012-12-14 18:16:26.000000000",
            "message": "Patch Set 1:\n\nHi Sascha,\n\nIs this behavior causing some bug? Normally I think of chunked transfer encoding as necessary when the server does not know the length it intends to transmit. Since we do already know the length of the image file, we shouldn't need to bother with chunked transfers.\n\nDoes that make sense? Is there something else I'm missing?\n\nThanks!",
            "accounts_in_message": [],
            "_revision_number": 1
        },
        {
            "id": "7a456da70a728a192c347d7f4bdd7e3bda9e61d1",
            "author": {
                "_account_id": 4375,
                "name": "Sascha Peilicke",
                "email": "sascha@peilicke.de",
                "username": "saschpe"
            },
            "real_author": {
                "_account_id": 4375,
                "name": "Sascha Peilicke",
                "email": "sascha@peilicke.de",
                "username": "saschpe"
            },
            "date": "2012-12-18 15:33:43.000000000",
            "message": "Patch Set 1:\n\nHi Mark\n\n> Normally I think of chunked transfer encoding as necessary when the server does not know the length it intends to transmit.\n\nCTE can be chosen at will by the server. You're right, it usually does this when the length isn't known or the data (file) is just to large to send in a single response.\n\n> Since we do already know the length of the image file, we shouldn't need to bother with chunked transfers.\n\nWe do, as said in the description, we set the iterator on webob.Response, that forces CTE. And it's the right thing to do, images are usually large. But as stated in the review description, it's illegal HTTP to set \"Content-Length\" when using CTE.",
            "accounts_in_message": [],
            "_revision_number": 1
        },
        {
            "id": "9441027aaac52d81a72faf05f69342d20a00e9d7",
            "author": {
                "_account_id": 616,
                "name": "Mark Washenberger",
                "email": "mark.washenberger@markwash.net",
                "username": "markwash"
            },
            "real_author": {
                "_account_id": 616,
                "name": "Mark Washenberger",
                "email": "mark.washenberger@markwash.net",
                "username": "markwash"
            },
            "date": "2012-12-20 17:59:51.000000000",
            "message": "Patch Set 1:\n\nLarge http responses do not imply a need for chunked transfers. Large responses only imply a need for streaming transfers where neither side of the connection holds the whole response in memory at one time. (Which, again, is not the same thing as a chunked transfer.)\n\nI did some digging into the Webob source tree and I think I understand what is going on. The only reason why webob unsets the content-length when app_iter is set is because the developers are assuming that webob set the content-length in the first place during some previous action.\n\nFor example, if I do\n  response.body = 'Hello, World!'\n\nthen behind the scenes, webob is doing\n  self.content-length = len('Hello, World!')\n \nSo when I then subsequently set app_iter, webob must obviously undo the work it did previously. The only reason we are encountering this awkwardness is that it has not occurred to the webob developers that we might wish to control the content-length header ourselves.\n\nRather than using chunked transfers, I think we must treat content-length exactly the same as you have proposed we treat md5-sum: We should simply assign it *after* assigning the app_iter.",
            "accounts_in_message": [],
            "_revision_number": 1
        },
        {
            "id": "9bd167640675133cbf1126c3d5b92a2b972181fc",
            "author": {
                "_account_id": 4375,
                "name": "Sascha Peilicke",
                "email": "sascha@peilicke.de",
                "username": "saschpe"
            },
            "real_author": {
                "_account_id": 4375,
                "name": "Sascha Peilicke",
                "email": "sascha@peilicke.de",
                "username": "saschpe"
            },
            "date": "2013-01-07 15:50:06.000000000",
            "message": "Patch Set 1:\n\nPatch Set 1:\n\n> Large http responses do not imply a need for chunked transfers.\n\nCorrect\n\n> Large responses only imply a need for streaming transfers where neither side of the connection holds the whole response in memory at one time.\n\nIt's sufficient if the sender can't hold the full response body in memory.\n\n> (Which, again, is not the same thing as a chunked transfer.)\n\nI guess you're referring to \"Using app_iter results into chunked transfer encoding\", right? I should rephrase that.\n\n> I did some digging into the Webob source tree and I think I understand what is going on. The only reason why webob unsets the content-length when app_iter is set is because the developers are assuming that webob set the content-length in the first place during some previous action.\n>\n> For example, if I do\n> response.body = 'Hello, World!'\n>\n> then behind the scenes, webob is doing\n> self.content-length = len('Hello, World!')\n>\n> So when I then subsequently set app_iter, webob must obviously undo the work it did previously. The only reason we are encountering this awkwardness is that it has not occurred to the webob developers that we might wish to control the content-length header ourselves.\n\n\nRight, because the Response object does this:\n\n  self._app_iter = [body]\n\nThe size of \"body\" is known and the response is sent in one go, thus no CTE is needed (https://github.com/Pylons/webob/blob/master/webob/response.py#L365). However, glance code does this:\n\n  response.app_iter = common.size_checked_iter(...)\n\nHowever, glance.api.common.size_checked_iter only yields a chunk of data upon each invocation (iteration), which is sent over the wire. Thus setting Content-Length here would violate rfc2616. Another more straightforward example is the usage of WebOb's gzip_app_iter (https://github.com/Pylons/webob/blob/master/webob/response.py#L1270) in Response.encode_content (https://github.com/Pylons/webob/blob/master/webob/response.py#L1270): \n\n        if lazy:\n            self.app_iter = gzip_app_iter(self._app_iter)\n            self.content_length = None\n        else:\n            self.app_iter = list(gzip_app_iter(self._app_iter))\n            self.content_length = sum(map(len, self._app_iter))\n\n'Lazy' means CTE, no content-length known, the else case is your \"response.body = 'Hello World'\" case. So WebOb handles the situation according to the RFC and removes the Content-Length header.\n\n> Rather than using chunked transfers, I think we must treat content-length exactly the same as you have proposed we treat md5-sum: We should simply assign it *after* assigning the app_iter.\n\nSince we are using common.size_checked_iter we are always doing CTE (check with curl), hence we must not set it.",
            "accounts_in_message": [],
            "_revision_number": 1
        },
        {
            "id": "10612fe09abfbc1ebd5b72e14dca3b4c7baad3a2",
            "author": {
                "_account_id": 2166,
                "name": "SmokeStack CI",
                "username": "smokestack",
                "tags": [
                    "SERVICE_USER"
                ]
            },
            "real_author": {
                "_account_id": 2166,
                "name": "SmokeStack CI",
                "username": "smokestack",
                "tags": [
                    "SERVICE_USER"
                ]
            },
            "date": "2013-01-09 20:35:39.000000000",
            "message": "Patch Set 1: Works for me\n\nSmokeStack Results (patch set 1):\n\tUnit Success: http://smokestack.openstack.org/?go=/jobs/61561\n\tLibvirt (Fedora 17) Success: http://smokestack.openstack.org/?go=/jobs/61559\n\tXenServer 5.6 (F17 domU) Success: http://smokestack.openstack.org/?go=/jobs/61560\n",
            "accounts_in_message": [],
            "_revision_number": 1
        },
        {
            "id": "7a4acc3b903af739e76b8bf31472330290ed335a",
            "author": {
                "_account_id": 616,
                "name": "Mark Washenberger",
                "email": "mark.washenberger@markwash.net",
                "username": "markwash"
            },
            "real_author": {
                "_account_id": 616,
                "name": "Mark Washenberger",
                "email": "mark.washenberger@markwash.net",
                "username": "markwash"
            },
            "date": "2013-01-10 00:32:19.000000000",
            "message": "Patch Set 1:\n\nI'm sure I must seem like I'm just trying to be difficult, but please bear with me.\n\nIt still seems to me like you are suggesting that whenever we pass an iterator for the response body, we are requiring that CTE be used. But that is not the case.\n\nThe behavior here depends entirely on the wsgi server (and in fact, not Webob). For eventlet, which we use, you can see it only uses CTE if Content-Length is missing (https://bitbucket.org/which_linden/eventlet/src/0cbeac9c857358320ddf5e00bef162ef187255e9/eventlet/wsgi.py?at=default#cl-326)\n\n                if 'content-length' not in header_list:\n                    if self.request_version == 'HTTP/1.1':\n                        use_chunked[0] = True\n                        towrite.append('Transfer-Encoding: chunked\\r\\n')\n                    elif 'content-length' not in header_list:\n                        # client is 1.0 and therefore must read to EOF\n                        self.close_connection = 1\n\n(There are actually multiple heads to that branch, and I'm not sure which one is actually used. However they all show the same logic, with albeit different code.)\n\nJust to make sure I checked with curl on a branch where I moved the \"set content-length\" step to after the \"set app_iter\" step. In this case I was saw Content-Length reported correctly and no chunking was used.\n\nI believe my original suggestion still stands. Webob is just being a bit silly by wiping out Content-Length when we set app-iter. As a result, eventlet is using chunked transfer encoding under the hood. If we work around the webob issue by setting the content-length after setting the app_iter, then eventlet does not use a chunked transfer encoding and still happily streams through the response without bothering to buffer everything in memory.\n\nSince we've been pushing around this a bit, I thought I'd go ahead and push up my alternative. See https://review.openstack.org/19350",
            "accounts_in_message": [],
            "_revision_number": 1
        },
        {
            "id": "466a54b85d0c048e8d7a92c6d4af46c92e920de3",
            "author": {
                "_account_id": 9,
                "name": "LaunchpadSync",
                "username": "launchpadsync"
            },
            "real_author": {
                "_account_id": 9,
                "name": "LaunchpadSync",
                "username": "launchpadsync"
            },
            "date": "2013-01-17 06:03:03.000000000",
            "message": "Patch Set 1:\n\ncode review expired after 1 week of no activity after a negative review, it can be restored using the `Restore Change` button under the Patch Set on the web interface",
            "accounts_in_message": [],
            "_revision_number": 1
        },
        {
            "id": "9f6312269cab5cb19bee4370fac82c1472bd5339",
            "author": {
                "_account_id": 9,
                "name": "LaunchpadSync",
                "username": "launchpadsync"
            },
            "real_author": {
                "_account_id": 9,
                "name": "LaunchpadSync",
                "username": "launchpadsync"
            },
            "date": "2013-01-17 06:03:03.000000000",
            "message": "Patch Set 1: Abandoned\n\ncode review expired after 1 week of no activity after a negative review, it can be restored using the `Restore Change` button under the Patch Set on the web interface",
            "accounts_in_message": [],
            "_revision_number": 1
        }
    ],
    "requirements": [],
    "submit_records": []
}