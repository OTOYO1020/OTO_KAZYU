{
    "id": "openstack%2Fglance~master~I94146d74f2f2434f19330d4c2406ef9d7acd337e",
    "project": "openstack/glance",
    "branch": "master",
    "topic": "protected-properties",
    "hashtags": [],
    "change_id": "I94146d74f2f2434f19330d4c2406ef9d7acd337e",
    "subject": "Add protected properties",
    "status": "ABANDONED",
    "created": "2011-09-15 23:21:30.000000000",
    "updated": "2011-10-24 20:52:28.000000000",
    "insertions": 306,
    "deletions": 5,
    "total_comment_count": 4,
    "unresolved_comment_count": 0,
    "has_review_started": true,
    "meta_rev_id": "a38faba9132e67cfd6806de4624afc07049c049a",
    "_number": 458,
    "owner": {
        "_account_id": 679,
        "name": "Kevin L. Mitchell",
        "email": "klmitch@mit.edu",
        "username": "klmitch"
    },
    "labels": {
        "Verified": {
            "all": [
                {
                    "_account_id": 1132,
                    "name": "Brian Waldon",
                    "email": "brian@waldon.cc",
                    "username": "bcwaldon"
                },
                {
                    "_account_id": 7,
                    "name": "Jay Pipes",
                    "email": "jaypipes@gmail.com",
                    "username": "jaypipes"
                },
                {
                    "_account_id": 679,
                    "name": "Kevin L. Mitchell",
                    "email": "klmitch@mit.edu",
                    "username": "klmitch"
                },
                {
                    "_account_id": 706,
                    "name": "Brian Lamar",
                    "email": "brian.lamar@rackspace.com",
                    "username": "blamar"
                }
            ],
            "values": {
                "-2": "Fails",
                "-1": "Doesn't seem to work",
                " 0": "No score",
                "+1": "Works for me",
                "+2": "Verified"
            },
            "description": "",
            "default_value": 0,
            "optional": true
        },
        "Code-Review": {
            "disliked": {
                "_account_id": 7,
                "name": "Jay Pipes",
                "email": "jaypipes@gmail.com",
                "username": "jaypipes"
            },
            "all": [
                {
                    "value": 0,
                    "date": "2011-09-18 01:25:08.000000000",
                    "permitted_voting_range": {
                        "min": -1,
                        "max": 1
                    },
                    "_account_id": 1132,
                    "name": "Brian Waldon",
                    "email": "brian@waldon.cc",
                    "username": "bcwaldon"
                },
                {
                    "value": -1,
                    "date": "2011-09-19 13:27:42.000000000",
                    "permitted_voting_range": {
                        "min": -1,
                        "max": 1
                    },
                    "_account_id": 7,
                    "name": "Jay Pipes",
                    "email": "jaypipes@gmail.com",
                    "username": "jaypipes"
                },
                {
                    "value": 0,
                    "date": "2011-09-15 23:22:56.000000000",
                    "permitted_voting_range": {
                        "min": -1,
                        "max": 1
                    },
                    "_account_id": 679,
                    "name": "Kevin L. Mitchell",
                    "email": "klmitch@mit.edu",
                    "username": "klmitch"
                },
                {
                    "value": 0,
                    "date": "2011-09-16 14:51:03.000000000",
                    "permitted_voting_range": {
                        "min": -1,
                        "max": 1
                    },
                    "_account_id": 706,
                    "name": "Brian Lamar",
                    "email": "brian.lamar@rackspace.com",
                    "username": "blamar"
                }
            ],
            "values": {
                "-2": "Do not merge",
                "-1": "This patch needs further work before it can be merged",
                " 0": "No score",
                "+1": "Looks good to me, but someone else must approve",
                "+2": "Looks good to me (core reviewer)"
            },
            "description": "",
            "value": -1,
            "default_value": 0,
            "optional": true
        },
        "Workflow": {
            "all": [
                {
                    "_account_id": 1132,
                    "name": "Brian Waldon",
                    "email": "brian@waldon.cc",
                    "username": "bcwaldon"
                },
                {
                    "_account_id": 7,
                    "name": "Jay Pipes",
                    "email": "jaypipes@gmail.com",
                    "username": "jaypipes"
                },
                {
                    "value": 0,
                    "permitted_voting_range": {
                        "min": -1,
                        "max": 0
                    },
                    "_account_id": 679,
                    "name": "Kevin L. Mitchell",
                    "email": "klmitch@mit.edu",
                    "username": "klmitch"
                },
                {
                    "_account_id": 706,
                    "name": "Brian Lamar",
                    "email": "brian.lamar@rackspace.com",
                    "username": "blamar"
                }
            ],
            "values": {
                "-1": "Work in progress",
                " 0": "Ready for reviews",
                "+1": "Approved"
            },
            "description": "",
            "default_value": 0,
            "optional": true
        },
        "Review-Priority": {
            "all": [
                {
                    "_account_id": 1132,
                    "name": "Brian Waldon",
                    "email": "brian@waldon.cc",
                    "username": "bcwaldon"
                },
                {
                    "_account_id": 7,
                    "name": "Jay Pipes",
                    "email": "jaypipes@gmail.com",
                    "username": "jaypipes"
                },
                {
                    "_account_id": 679,
                    "name": "Kevin L. Mitchell",
                    "email": "klmitch@mit.edu",
                    "username": "klmitch"
                },
                {
                    "_account_id": 706,
                    "name": "Brian Lamar",
                    "email": "brian.lamar@rackspace.com",
                    "username": "blamar"
                }
            ],
            "values": {
                "-1": "Branch Freeze",
                " 0": "No Priority",
                "+1": "Important Change",
                "+2": "Top Priority / Holds Gate"
            },
            "description": "",
            "default_value": 0,
            "optional": true
        }
    },
    "removable_reviewers": [],
    "reviewers": {
        "REVIEWER": [
            {
                "_account_id": 7,
                "name": "Jay Pipes",
                "email": "jaypipes@gmail.com",
                "username": "jaypipes"
            },
            {
                "_account_id": 679,
                "name": "Kevin L. Mitchell",
                "email": "klmitch@mit.edu",
                "username": "klmitch"
            },
            {
                "_account_id": 706,
                "name": "Brian Lamar",
                "email": "brian.lamar@rackspace.com",
                "username": "blamar"
            },
            {
                "_account_id": 1132,
                "name": "Brian Waldon",
                "email": "brian@waldon.cc",
                "username": "bcwaldon"
            }
        ]
    },
    "pending_reviewers": {},
    "reviewer_updates": [
        {
            "updated": "2011-09-16 14:51:03.000000000",
            "updated_by": {
                "_account_id": 706,
                "name": "Brian Lamar",
                "email": "brian.lamar@rackspace.com",
                "username": "blamar"
            },
            "reviewer": {
                "_account_id": 706,
                "name": "Brian Lamar",
                "email": "brian.lamar@rackspace.com",
                "username": "blamar"
            },
            "state": "REVIEWER"
        },
        {
            "updated": "2011-09-18 01:25:08.000000000",
            "updated_by": {
                "_account_id": 1132,
                "name": "Brian Waldon",
                "email": "brian@waldon.cc",
                "username": "bcwaldon"
            },
            "reviewer": {
                "_account_id": 1132,
                "name": "Brian Waldon",
                "email": "brian@waldon.cc",
                "username": "bcwaldon"
            },
            "state": "REVIEWER"
        },
        {
            "updated": "2011-09-19 13:27:42.000000000",
            "updated_by": {
                "_account_id": 7,
                "name": "Jay Pipes",
                "email": "jaypipes@gmail.com",
                "username": "jaypipes"
            },
            "reviewer": {
                "_account_id": 7,
                "name": "Jay Pipes",
                "email": "jaypipes@gmail.com",
                "username": "jaypipes"
            },
            "state": "REVIEWER"
        }
    ],
    "messages": [
        {
            "id": "bb92fe160e3d08af3f8cc683cd03ec37ac62e018",
            "author": {
                "_account_id": 679,
                "name": "Kevin L. Mitchell",
                "email": "klmitch@mit.edu",
                "username": "klmitch"
            },
            "real_author": {
                "_account_id": 679,
                "name": "Kevin L. Mitchell",
                "email": "klmitch@mit.edu",
                "username": "klmitch"
            },
            "date": "2011-09-15 23:22:56.000000000",
            "message": "Patch Set 1:\n\nFinally, after having \"git rebase\" helpfully discard a couple\nof my *checked in* changes.",
            "accounts_in_message": [],
            "_revision_number": 1
        },
        {
            "id": "110778711293e08b86df4b493faeb5223c8779eb",
            "author": {
                "_account_id": 706,
                "name": "Brian Lamar",
                "email": "brian.lamar@rackspace.com",
                "username": "blamar"
            },
            "real_author": {
                "_account_id": 706,
                "name": "Brian Lamar",
                "email": "brian.lamar@rackspace.com",
                "username": "blamar"
            },
            "date": "2011-09-16 14:51:03.000000000",
            "message": "Patch Set 1: (2 inline comments)\n\nI hesitate to give this a -1 (because I really don't think the text that goes along with it is very apt), but I have a couple of comments:\n\nThe use of isinstance screams to me that either all properties should be objects (+1) or there should be a separate interface for adding properties to an image. Currently, as you point out, image_create() gets passed a dictionary of properties. If all properties are not objects then it's being passed a dictionary of mixed-types which in my opinion isn't ideal.\n\nI don't know exactly how it might be accomplished but the other way, creating a separate interface for adding properties, would be more invasive. image_create(values) would be replaced with image_add_property(key, value, protected=False) or something of that nature.\n\nAll-in-all I don't want to hold up this change due to my dislike for isinstance() :)\n\nSecondly, I think the migrations in Glance are getting a little out of hand due to some history and copy/paste... we should be able to add a column with a lot less code than we currently do:\n\nhttp://paste.openstack.org/show/2459/\n\n\nLastly, I'd love for bugs/blueprints to be made from the large block comments, that way they're more visible and can be better prioritized.",
            "accounts_in_message": [],
            "_revision_number": 1
        },
        {
            "id": "cb514561e5a3a856bac311e97ad402b1c1b8d6c0",
            "author": {
                "_account_id": 679,
                "name": "Kevin L. Mitchell",
                "email": "klmitch@mit.edu",
                "username": "klmitch"
            },
            "real_author": {
                "_account_id": 679,
                "name": "Kevin L. Mitchell",
                "email": "klmitch@mit.edu",
                "username": "klmitch"
            },
            "date": "2011-09-16 15:13:51.000000000",
            "message": "Patch Set 1: (2 inline comments)\n\nCould you explain what you mean by \"because I really don't think the text that goes along with it is very apt\"?\n\nI agree that the isinstance() stuff screams \"hack\".  Personally, I'd prefer to go the route of having a separate interface for manipulating properties, but it's the invasiveness of that that kept me from doing it this time.\n\nAnd +1 on the verbosity of the migrations!\n\nFinally, I intend to open appropriate bugs/stories once this merge goes through for fixing the interface; I didn't want to do it before the merge because who knows what feedback I might get :)",
            "accounts_in_message": [],
            "_revision_number": 1
        },
        {
            "id": "bee890753e635042a9f43a21af2a483a51a7b2b7",
            "author": {
                "_account_id": 7,
                "name": "Jay Pipes",
                "email": "jaypipes@gmail.com",
                "username": "jaypipes"
            },
            "real_author": {
                "_account_id": 7,
                "name": "Jay Pipes",
                "email": "jaypipes@gmail.com",
                "username": "jaypipes"
            },
            "date": "2011-09-16 16:50:43.000000000",
            "message": "Patch Set 1:\n\nre: the migration files, yeah, totally agree. Doing a more thorough review now.",
            "accounts_in_message": [],
            "_revision_number": 1
        },
        {
            "id": "7b768662059c147bb0c1c0c541e218748faf9fba",
            "author": {
                "_account_id": 1132,
                "name": "Brian Waldon",
                "email": "brian@waldon.cc",
                "username": "bcwaldon"
            },
            "real_author": {
                "_account_id": 1132,
                "name": "Brian Waldon",
                "email": "brian@waldon.cc",
                "username": "bcwaldon"
            },
            "date": "2011-09-18 01:25:08.000000000",
            "message": "Patch Set 1:\n\nI would like to suggest a few things:\n\n1) I don't see the need to add another file for the tests. Can't those just live in glance/tests/functional/test_api.py?\n\n2) I definitely support what Lamar said about the isinstance calls. I would suggest changing the interface of image_create (and any others that take image property dicts). Perhaps they could accept a list of dicts?\n\n3) Can you call the header 'X-Image-Meta-Protected-Property? That way, people can still use 'protected' as the first word of their property name.",
            "accounts_in_message": [],
            "_revision_number": 1
        },
        {
            "id": "eb22d59270378dcd75c37f46c9c72458ca220a54",
            "author": {
                "_account_id": 7,
                "name": "Jay Pipes",
                "email": "jaypipes@gmail.com",
                "username": "jaypipes"
            },
            "real_author": {
                "_account_id": 7,
                "name": "Jay Pipes",
                "email": "jaypipes@gmail.com",
                "username": "jaypipes"
            },
            "date": "2011-09-19 13:27:42.000000000",
            "message": "Patch Set 1: I would prefer that you didn't submit this\n\nAfter reviewing this more fully on Friday, I think I would prefer a simpler, less error prone implementation. Long-term, I think that image properties need to be handled in such a way that they are a full-fledged subresource. I added a design summit session and blueprint for this:\n\nhttp://summit.openstack.org/sessions/view/48\nhttps://blueprints.launchpad.net/glance/+spec/image-properties-refactor\n\nShort-term, however, I think that it would be better to implement this using the following implementation:\n\n1) Add an optional configuration variable called system_user that is set to the user/tenant of the \"system\". This would likely be \"nova\" for the use cases described for protected-properties.\n\n2) Add an owner_id column to the ImageProperty model/table.\n\n3) Use the user authentication system and context middleware to determine what user/tenant is adding a property. Follow these rules:\n\n a) If the property does NOT already exist, add it, setting the owner_id column of the ImageProperty to the user/tenant of the request context.\n b) If the property ALREADY EXISTS, then do the following:\n  1. If the user/tenant is the system user/tenant, overwrite whatever was in the record and set the owner_id to the system user/tenant.\n  2. If the user/tenant is NOT the system user/tenant, return a 403 Forbidden\n\n4) When retrieving image properties through the client for a call to /images/<ID> or /images/detail, return all properties along with a flag for whether the property is a system property (its owner_id = system_user configuration value)\n\nI think this would avoid some of the problematic code in this particular implementation and allow the use cases to be fulfilled in a simple way until we can add a true properties subresource to the 2.0 API.\n\nThoughts?\n-jay",
            "accounts_in_message": [],
            "_revision_number": 1
        },
        {
            "id": "8535b44aa230ec796a97df70ef277f73cf23f84c",
            "author": {
                "_account_id": 679,
                "name": "Kevin L. Mitchell",
                "email": "klmitch@mit.edu",
                "username": "klmitch"
            },
            "real_author": {
                "_account_id": 679,
                "name": "Kevin L. Mitchell",
                "email": "klmitch@mit.edu",
                "username": "klmitch"
            },
            "date": "2011-09-19 15:33:30.000000000",
            "message": "Patch Set 1:\n\nThe basic problem that I'm trying to solve here is that there should be properties that users cannot set, i.e., a property like \"rackspace-certified\".  I started off with a system property approach, but I received pushback from Glen to the effect that naive users could be tricked by _user_ properties having the same name as the _system_ property.  Then Glen spoke with Jay, and said you had agreed with an approach where protected properties could be listed in a configuration file, which is what I have attempted to implement here (with full knowledge that I was accumulating some technical debt which would need to be addressed at some point).\n\nWhat you're saying now seems to contradict the property that caused me to scrap my previous work: as I read what you say, a consequence would seem to be that users can again set properties with the same name as a protected property, potentially misleading naive users.  Is this correct?\n\n(Incidentally, \"protected properties\" is a feature that Rackspace has marked as \"essential,\" and we also have a deadline which occurs before the conference (which, by the way, I will not be able to attend).  So, I either need to come up with an implementation that is acceptable before then or somehow convince Glen that we can put it off until after the conference...)",
            "accounts_in_message": [],
            "_revision_number": 1
        },
        {
            "id": "74690c6a94b91b2a399bab72a9100f101255f55b",
            "author": {
                "_account_id": 1132,
                "name": "Brian Waldon",
                "email": "brian@waldon.cc",
                "username": "bcwaldon"
            },
            "real_author": {
                "_account_id": 1132,
                "name": "Brian Waldon",
                "email": "brian@waldon.cc",
                "username": "bcwaldon"
            },
            "date": "2011-10-14 18:48:00.000000000",
            "message": "Patch Set 1:\n\nKevin and Jay: Do we need to regroup here and talk about what we discussed at the conference?",
            "accounts_in_message": [],
            "_revision_number": 1
        },
        {
            "id": "c87c68e3e3c532d3490b59761d59405e549d1817",
            "author": {
                "_account_id": 679,
                "name": "Kevin L. Mitchell",
                "email": "klmitch@mit.edu",
                "username": "klmitch"
            },
            "real_author": {
                "_account_id": 679,
                "name": "Kevin L. Mitchell",
                "email": "klmitch@mit.edu",
                "username": "klmitch"
            },
            "date": "2011-10-14 18:54:24.000000000",
            "message": "Patch Set 1:\n\nIf this was discussed at the conference, then yes, we probably should (and we should probably include glenc in that conversation as well).",
            "accounts_in_message": [],
            "_revision_number": 1
        },
        {
            "id": "62a9a2be54c7948640a03d8ffadd748d1d44adf2",
            "author": {
                "_account_id": 679,
                "name": "Kevin L. Mitchell",
                "email": "klmitch@mit.edu",
                "username": "klmitch"
            },
            "real_author": {
                "_account_id": 679,
                "name": "Kevin L. Mitchell",
                "email": "klmitch@mit.edu",
                "username": "klmitch"
            },
            "date": "2011-10-24 20:52:28.000000000",
            "message": "Patch Set 1: Abandoned\n\nAbandoning for superior v2.0 API approach",
            "accounts_in_message": [],
            "_revision_number": 1
        }
    ],
    "requirements": [],
    "submit_records": []
}